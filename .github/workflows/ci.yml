name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  install_dependencies:
    name: Install Dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v4
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install

  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    needs:
      - install_dependencies

    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v4
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install
      - name: Lint
        run: pnpm run -r --parallel --aggregate-output lint

  test:
    name: "Tests"
    runs-on: ubuntu-latest
    needs:
      - install_dependencies

    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v4
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install
      - name: Build package
        run: pnpm --filter ember-ability build
      - name: Run Tests
        run: pnpm --filter ember-app run test:ember

  floating-deps-test:
    name: Floating Dependencies
    runs-on: ubuntu-latest
    needs:
      - install_dependencies

    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v4
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: latest
      - name: Install Dependencies
        run: rm pnpm-lock.yaml && pnpm install
      - name: Build package
        run: pnpm --filter ember-ability build
      - name: Run Tests
        run: pnpm --filter ember-app run test:ember

  # floating:
  #   name: "Floating Dependencies"
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 14.x
  #         cache: yarn
  #     - name: Install Dependencies
  #       run: yarn install --no-lockfile
  #     - name: Run Tests
  #       run: yarn test

  try-scenarios:
    name: ${{ matrix.try-scenario }}
    runs-on: ubuntu-latest
    needs: test

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.28
          - ember-lts-4.4
          - ember-release
          - ember-beta
          - ember-canary
          - ember-classic
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v4
      # - name: Cache pnpm modules
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.pnpm-store
      #     key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install
      - name: Build package
        run: pnpm --filter ember-ability build
      - name: Run Tests
        run: ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }} --skip-cleanup
        working-directory: ember-app
